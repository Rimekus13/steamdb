services:
  airflow:
    image: apache/airflow:2.9.2
    container_name: airflow
    restart: unless-stopped
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "False"
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "True"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "sqlite:////opt/airflow/airflow.db"
      AIRFLOW__CORE__EXECUTOR: "SequentialExecutor"
      AIRFLOW__WEBSERVER__WEB_SERVER_PORT: "${AIRFLOW_PORT:-8081}"

      # Config ETL
      BRONZE_MODE: "gcs"
      GCP_PROJECT: "${GCP_PROJECT}"
      GCS_BUCKET: "${GCS_BUCKET}"
      APP_IDS_FILE: "/opt/airflow/apps.txt"
      FIRESTORE_PROJECT: "${FIRESTORE_PROJECT}"

      PYTHONPATH: "/opt/airflow"
    ports:
      - "${AIRFLOW_PORT:-8081}:${AIRFLOW_PORT:-8081}"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./etl:/opt/airflow/etl
      - ./apps.txt:/opt/airflow/apps.txt:ro
      - ./requirements.txt:/opt/airflow/requirements.txt:ro

      # ðŸ‘‡ Donne accÃ¨s au Docker du host
      - /var/run/docker.sock:/var/run/docker.sock
      # (optionnel mais utile pour que le DC trouve le compose du projet)
      - ./:/opt/airflow
    command: >
      bash -lc '
        set -e
        pip install -r /opt/airflow/requirements.txt;

        # âœ… Installe docker CLI et plugin compose dans le conteneur Airflow
        apt-get update -y;
        apt-get install -y ca-certificates curl gnupg;
        install -m 0755 -d /etc/apt/keyrings;
        curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg;
        chmod a+r /etc/apt/keyrings/docker.gpg;
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
        $(. /etc/os-release && echo $VERSION_CODENAME) stable" > /etc/apt/sources.list.d/docker.list;
        apt-get update -y;
        apt-get install -y docker-ce-cli docker-compose-plugin;

        airflow db init;
        (airflow users create --username ${AIRFLOW_USER:-admin} --password ${AIRFLOW_PWD:-admin} --firstname Admin --lastname User --role Admin --email admin@example.com) || true;
        airflow scheduler & exec airflow webserver
      '
