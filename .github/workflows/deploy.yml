name: Deploy to GCE VM

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      APP_DIR: /home/steamdb_ynov/steamdb

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) PREP: clean dossier cible + droits (supprime ancien .git)
      - name: Prepare target folder (own & clean)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            set -euo pipefail
            APP_DIR="${APP_DIR:-$HOME/steamdb}"
            echo "[INFO] Preparing ${APP_DIR} on $(hostname) as $(whoami)"
            sudo mkdir -p "$APP_DIR"
            sudo chown -R "$(whoami):$(whoami)" "$APP_DIR"
            # supprime tout contenu existant et surtout un éventuel .git root
            rm -rf "$APP_DIR/.git"
            find "$APP_DIR" -mindepth 1 -maxdepth 1 -exec rm -rf {} +

      # 2) UPLOAD: garder source="." mais EXCLURE .git (et quelques bricoles)
      - name: Upload repo to VM (exclude .git)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "."
          target: "${{ env.APP_DIR }}"
          overwrite: true
          # Exclure .git (et autres dossiers inutiles). scp-action supporte tar_exec.
          tar_exec: "tar --exclude='.git' --exclude='.github' --exclude='.venv' --exclude='__pycache__' -czf"

      - name: Deploy via SSH (Docker & Compose)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script_stop: true
          command_timeout: 60m
          script: |
            set -euo pipefail
            echo "[INFO] Host: $(hostname) User: $(whoami)"
            APP_DIR="${APP_DIR:-$HOME/steamdb}"
            cd "$APP_DIR"

            # 1) Docker
            if ! command -v docker >/dev/null 2>&1; then
              sudo apt-get update -y
              sudo apt-get install -y docker.io
              sudo systemctl enable docker
              sudo systemctl start docker
              sudo usermod -aG docker "$(whoami)" || true
            fi

            # 2) Compose v2 (fallback standalone)
            if ! command -v docker-compose >/dev/null 2>&1 && ! docker compose version >/dev/null 2>&1; then
              COMPOSE_VERSION="v2.28.1"
              sudo curl -fsSL "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-linux-x86_64" \
                -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # 3) Choix de la commande
            if docker compose version >/dev/null 2>&1; then
              DC="docker compose"
            else
              DC="docker-compose"
            fi

            # 4) Déploiement
            $DC pull || true
            $DC down || true
            $DC up -d
            $DC ps
